name: Commit Stage
on: push

env:
  FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true

jobs:
  detect-changes:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            patient-service:
              - 'patient-service/**'
            appointment-service:
              - 'appointment-service/**'

      - id: set-matrix
        name: Set matrix
        run: |
          services=()
          if [[ "${{ steps.filter.outputs.patient-service }}" == "true" ]]; then
            services+=("patient-service")
          fi
          if [[ "${{ steps.filter.outputs.appointment-service }}" == "true" ]]; then
            services+=("appointment-service")
          fi
          echo "matrix=$(jq -c -n --arg s "${services[*]}" '{include: ($s | split(" ") | map({service: .}))}' )" >> $GITHUB_OUTPUT

  build-and-test:
    needs: detect-changes
    if: fromJson(needs.detect-changes.outputs.matrix).include[0]
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.matrix)}}
    name: Build and Test ${{ matrix.service }}
    runs-on: ubuntu-24.04
    environment: development
    permissions:
      contents: read
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Build, unit tests and integration tests
        working-directory: ${{ matrix.service }}
        run: |
          chmod +x gradlew
          ./gradlew checkstyleMain --stacktrace || exit 1
          ./gradlew checkstyleTest --stacktrace || exit 1
          ./gradlew test --stacktrace || exit 1
          ./gradlew integrationTest --stacktrace || exit 1
          ./gradlew jacocoTestReport --stacktrace || exit 1
          ./gradlew jacocoTestCoverageVerification --stacktrace || exit 1
          ./gradlew spotbugsMain --stacktrace || exit 1
          ./gradlew spotbugsTest --stacktrace || exit 1

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ matrix.service }}
          path: |
            ${{ matrix.service }}/build/reports/tests/test/
            ${{ matrix.service }}/build/reports/tests/integrationTest/
            ${{ matrix.service }}/build/reports/jacoco/test/html/
            ${{ matrix.service }}/build/reports/checkstyle/main.html
            ${{ matrix.service }}/build/reports/checkstyle/test.html
            ${{ matrix.service }}/build/reports/spotbugs/main.html
            ${{ matrix.service }}/build/reports/spotbugs/test.html
          retention-days: 1

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.service }}
          path: ${{ matrix.service }}/build/libs/
          retention-days: 1

  security-scan:
    needs: [build-and-test, detect-changes]
    if: fromJson(needs.detect-changes.outputs.matrix).include[0]
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.matrix)}}
    name: Security Scan ${{ matrix.service }}
    runs-on: ubuntu-24.04
    environment: development
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}/${{ matrix.service }}"
          fail-build: false
          severity-cutoff: high
          output-format: sarif

      - name: Upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Upload Security Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports-${{ matrix.service }}
          path: |
            ${{ steps.scan.outputs.sarif }}
            ${{ matrix.service }}/build/reports/dependency-check-report.html
          retention-days: 1

  report-upload:
    name: Upload Combined Reports
    needs: [security-scan, detect-changes]
    if: fromJson(needs.detect-changes.outputs.matrix).include[0]
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.matrix)}}
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
    steps:
      - name: Download All Reports
        uses: actions/download-artifact@v4
        with:
          path: all-reports

      - name: Upload Combined Reports
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: all-reports/${{ matrix.service }}
          retention-days: 7

  validate:
    name: Validate Kubernetes Manifests
    needs: detect-changes
    if: fromJson(needs.detect-changes.outputs.matrix).include[0]
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.matrix)}}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Create results directory
        run: mkdir -p validation-results

      - name: Validate Kubernetes manifests
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/${{ matrix.service }}/k8s:/k8s \
            -v ${{ github.workspace }}/validation-results:/results \
            ghcr.io/yannh/kubeconform:latest \
            -summary -output json /k8s > validation-results/validation.json

      - name: Upload validation results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k8s-validation-results-${{ matrix.service }}
          path: validation-results/validation.json
          retention-days: 7

  build-and-push:
    needs: [validate, detect-changes]
    if: fromJson(needs.detect-changes.outputs.matrix).include[0]
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.matrix)}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate version tag
        id: version
        run: |
          echo "tag=dev" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.service }}
          tags: |
            type=raw,value=${{ steps.version.outputs.tag }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          file: ${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}