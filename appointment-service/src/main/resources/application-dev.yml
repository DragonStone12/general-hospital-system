server:
  port: 9020
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

spring:
  application:
    name: appointment-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  r2dbc:
    username: ${APPOINTMENT_SERVICE_USERNAME}
    password: ${APPOINTMENT_SERVICE_PASSWORD}
    url: r2dbc:mysql://${APPOINTMENT_SERVICE_HOSTNAME}:3306/${APPOINTMENT_SERVICE_DB}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:mysql://${APPOINTMENT_SERVICE_HOSTNAME}:3306/${APPOINTMENT_SERVICE_DB}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    locations: classpath:db/migration
    encoding: UTF-8
    baseline-on-migrate: false
  cloud:
    loadbalancer:
      request:
        timeout:
          connect: 2500
          read: 2500
      fail-fast: false
      retry:
        max-attempts: 8
        initial-interval: 1500
        max-interval: 3000
        multiplier: 1.5

management:
  server:
    port: 8020
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,metrics,prometheus,refresh,info,env,mappings,beans
  export:
    prometheus:
      enabled: true
      step: 30s
  endpoint:
    shutdown:
      enabled: false
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}    

logging:
  pattern:
    console: "%clr(${spring.application.name} %d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  level:
    root: INFO
    org.flywaydb: INFO
    org.springframework.security: INFO
    org.springframework.r2dbc: DEBUG
    io.r2dbc.mysql: DEBUG
    org.springframework.transaction: DEBUG
    org.springframework.cloud: DEBUG
    org.springframework.cloud.kubernetes: DEBUG
    org.springframework.web.reactive: DEBUG
    org.springframework.boot.actuate: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG
    org.springframework.retry: DEBUG
    org.springframework.cache: DEBUG
    io.micrometer: DEBUG
    org.springframework.cloud.circuit.breaker: DEBUG
    com.pam.appointmentservice: DEBUG
    org.springframework.boot.availability: DEBUG
  file:
    name: logs/appointment-service.log
    max-size: 10MB
    max-history: 7
    total-size-cap: 100MB